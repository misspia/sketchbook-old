"use strict";(self.webpackChunk_003=self.webpackChunk_003||[]).push([[920],{184:(t,e,n)=>{n.d(e,{Z:()=>r});const r="precision mediump float;\n#define GLSLIFY 1\n\nuniform vec2 u_resolution;\nuniform vec2 u_mouse;\nuniform float u_time;\n\n#define MTL_YLW             1.0\n#define MTL_BLUE            2.0\n\n#define MAX_MARCHING_STEPS  255\n#define MIN_DIST            0.0\n#define MAX_DIST            100.0\n#define EPSILON             0.0001\n\nfloat smin( float a, float b, float k ) {\n    float h = clamp( 0.5 + 0.5 * (b - a) / k, 0.0, 1.0 );\n    return mix(b, a, h) - k * h * (1.0 - h);\n}\n\nfloat add(float a, float b) {\n  return smin(a, b, 0.8);\n}\n\nfloat sdSphere(vec3 p, float s) {\n  return length(p) - s;\n}\n\nfloat sdTorus(vec3 p, vec2 t) {\n  vec2 q = vec2(length(p.xz) - t.x, p.y);\n  return length(q) - t.y;\n}\n\nvec3 distort(vec3 p) {\n    float c = cos(10.0 * p.y);\n    float s = sin(10.0 * p.y);\n    mat2  m = mat2(c, -s, s, c);\n    vec3  q = vec3(m * p.xz, p.y);\n    return q;\n}\n\nfloat sceneSDF(vec3 p) {\n  float timeFactor = 1.5;\n  vec3 pt = p, ps1 = p, ps2 = p;\n\n  ps1.y += sin(u_time * timeFactor);\n  ps1.x += sin(-u_time * timeFactor);\n\n  ps2.y += cos(u_time * timeFactor);\n  ps2.x += cos(u_time * timeFactor);\n\n  float torus = sdTorus(distort(pt), vec2(0.4, 0.1));\n  float sphereLeft = sdSphere(ps1, 0.15);\n  float sphereRight = sdSphere(ps2, 0.15);\n  return add(add(torus, sphereLeft), sphereRight);\n}\n\nfloat rayMarch(vec3 camera, vec3 dir, float start, float end) {\n    float depth = start;\n    for (int i = 0; i < MAX_MARCHING_STEPS; i++) {\n        float dist = sceneSDF(camera + depth * dir);\n        if (dist < EPSILON) return depth;\n        depth += dist;\n        if (depth >= end) return end;\n    }\n    return end;\n}\n\nvec3 rayDirection(float fov, vec2 uv) {\n  vec3 dir;\n  dir.xy = uv - u_resolution / 2.0;\n  dir.z = -(u_resolution.y / tan(radians(fov) / 2.0));\n\n  return normalize(dir);\n}\n\nvec3 estimateNormal(vec3 p) {\n    return normalize(vec3(\n        sceneSDF(vec3(p.x + EPSILON, p.y, p.z)) - sceneSDF(vec3(p.x - EPSILON, p.y, p.z)),\n        sceneSDF(vec3(p.x, p.y + EPSILON, p.z)) - sceneSDF(vec3(p.x, p.y - EPSILON, p.z)),\n        sceneSDF(vec3(p.x, p.y, p.z  + EPSILON)) - sceneSDF(vec3(p.x, p.y, p.z - EPSILON))\n    ));\n}\n\nvec3 phongContribForLight(vec3 kd, vec3 ks, float alpha, vec3 p, vec3 camera,\n                          vec3 lightPos, vec3 lightIntensity) {\n    vec3 N = estimateNormal(p);\n    vec3 L = normalize(lightPos - p);\n    vec3 V = normalize(camera - p);\n    vec3 R = normalize(reflect(-L, N));\n\n    float dotLN = dot(L, N);\n    float dotRV = dot(R, V);\n\n    if (dotLN < 0.0) return vec3(0.0, 0.0, 0.0);\n    if (dotRV < 0.0) return lightIntensity * (kd * dotLN);\n\n    return lightIntensity * (kd * dotLN + ks * pow(dotRV, alpha));\n}\n\nvec3 phongIllumination(vec3 ka, vec3 kd, vec3 ks, float alpha, vec3 p, vec3 camera) {\n    const vec3 ambientLight = 0.5 * vec3(1.0, 1.0, 1.0);\n    vec3 color = ambientLight * ka;\n\n    vec3 light1Intensity = vec3(0.4, 0.4, 0.4);\n    vec3 light1Pos = vec3(4.0, 2.0, 4.0);\n\n    vec3 light2Intensity = vec3(0.4, 0.4, 0.4);\n    vec3 light2Pos = vec3(2.0, 2.0, 2.0);\n\n    color += phongContribForLight(kd, ks, alpha, p, camera,\n                                  light1Pos,\n                                  light1Intensity);\n    color += phongContribForLight(kd, ks, alpha, p, camera,\n                                  light2Pos,\n                                  light2Intensity);\n    return color;\n}\n\nvoid main() {\n  vec3 bgColor = vec3(1.0, 0.6, 0.8);\n  vec3 dir = rayDirection(45.0, gl_FragCoord.xy);\n  vec3 camera = vec3(0.0, 0.0, 5.0);\n  float dist = rayMarch(camera, dir, MIN_DIST, MAX_DIST);\n\n  if (dist > MAX_DIST - EPSILON) {\n      gl_FragColor = vec4(bgColor, 1.0);\n      return;\n  }\n\n  vec3 p = camera + dist * dir;\n  vec3 ka = vec3(1.0, 1.0, 0.1);\n  vec3 kd = ka / 2.0;\n  vec3 ks = vec3(1.0, 1.0, 1.0);\n  float shininess = 9.0;\n  vec3 color = phongIllumination(ka, kd, ks, shininess, p, camera);\n\n  gl_FragColor = vec4(color, 1.0);\n}\n"},349:(t,e,n)=>{n.d(e,{Z:()=>r});const r="precision mediump float;\n#define GLSLIFY 1\n\nattribute vec2 a_position;\n\nvoid main() {\n    gl_Position = vec4(a_position, 0.0, 1.0);\n}\n"},920:(t,e,n)=>{n.r(e),n.d(e,{default:()=>c});var r=n(759),i=n.n(r),o=n(609),a=n(202);function c(t){var e=t.ready,n=void 0===e||e,c=(0,r.useRef)(null),s=(0,r.useRef)(null),u=(0,r.useMemo)((function(){if(c.current)return new a.Z(c.current,s.current)}),[c.current]),l=(0,o.i)(),f=l.width,h=l.height;return(0,r.useEffect)((function(){u&&u.resize(f,h)}),[u,f,h]),(0,r.useEffect)((function(){u&&n&&u.render()}),[u,n]),i().createElement(i().Fragment,null,i().createElement("canvas",{ref:c}),i().createElement("audio",{ref:s,loop:!0}))}},202:(t,e,n)=>{n.d(e,{Z:()=>f});var r=n(349),i=n(184);function o(t){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},o(t)}function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function c(t,e){return c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},c(t,e)}function s(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=l(t);if(e){var i=l(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return u(this,n)}}function u(t,e){if(e&&("object"===o(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function l(t){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},l(t)}const f=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&c(t,e)}(l,t);var e,n,o,u=s(l);function l(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,l),(e=u.call(this,t)).startTime=Date.now(),e}return e=l,(n=[{key:"init",value:function(){this.initFragPlayground(r.Z,i.Z),this.getAPosition("a_position"),this.getUResolution("u_resolution")}},{key:"draw",value:function(){var t=this;this.getUTime("u_time"),this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,4),requestAnimationFrame((function(){return t.draw()}))}}])&&a(e.prototype,n),o&&a(e,o),Object.defineProperty(e,"prototype",{writable:!1}),l}(n(491).x)},491:(t,e,n)=>{function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}n.d(e,{x:()=>i});var i=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.canvas=e;try{this.gl=e.getContext("webgl")}catch(t){throw alert("Sorry, WebGL has not been enabled on your browser :("),t}this.program={},this.vertShader={},this.fragShader={},this.mouse={},this.images=[]}var e,n,i;return e=t,(n=[{key:"unmount",value:function(){}},{key:"init",value:function(){}},{key:"draw",value:function(){}},{key:"render",value:function(){this.init(),this.draw()}},{key:"clear",value:function(){this.gl.clearColor(0,0,0,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT)}},{key:"resize",value:function(t,e){this.canvas.width=t,this.canvas.height=e,this.gl.viewport(0,0,this.gl.drawingBufferWidth,this.gl.drawingBufferHeight)}},{key:"getRandomRange",value:function(t,e){return Math.random()*(e-t)+t}},{key:"getSmallestDimmension",value:function(){return this.canvas.width>this.canvas.height?this.canvas.width:this.canvas.height}},{key:"setMouseMoveListener",value:function(){var t=this;this.canvas.addEventListener("mousemove",(function(e){t.mouse={x:e.clientX?e.clientX:0,y:e.clientY?e.clientY:0}}))}},{key:"addMouseListener",value:function(t){}},{key:"initFragPlayground",value:function(t,e){this.vertShader=this.compileShader(t,this.gl.VERTEX_SHADER),this.fragShader=this.compileShader(e,this.gl.FRAGMENT_SHADER),this.program=this.createProgram(this.vertShader,this.fragShader);var n=new Float32Array([-1,1,-1,-1,1,1,1,-1]),r=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,r),this.gl.bufferData(this.gl.ARRAY_BUFFER,n,this.gl.STATIC_DRAW)}},{key:"createProgram",value:function(t,e){var n=this.gl.createProgram();return this.gl.attachShader(n,t),this.gl.attachShader(n,e),this.gl.linkProgram(n),this.gl.useProgram(n),n}},{key:"compileShader",value:function(t,e){var n=this.gl.createShader(e);if(this.gl.shaderSource(n,t),this.gl.compileShader(n),!this.gl.getShaderParameter(n,this.gl.COMPILE_STATUS))throw"Failed to compile shader: ".concat(this.gl.getShaderInfoLog(n));return n}},{key:"getAttribLocation",value:function(t,e){var n=this.gl.getAttribLocation(t,e);if(-1===n)throw"Cannot find attribute ".concat(e);return n}},{key:"getUniformLocation",value:function(t,e){var n=this.gl.getUniformLocation(t,e);if(-1===n)throw"Cannot find uniform ".concat(e);return n}},{key:"getAPosition",value:function(){var t=this.getAttribLocation(this.program,"a_position");this.gl.enableVertexAttribArray(t),this.gl.vertexAttribPointer(t,2,this.gl.FLOAT,this.gl.FALSE,8,0)}},{key:"getUResolution",value:function(){var t=this.getUniformLocation(this.program,"u_resolution");this.gl.uniform2f(t,this.canvas.width,this.canvas.height)}},{key:"getUTime",value:function(){var t=(Date.now()-this.startTime)/1e3,e=this.getUniformLocation(this.program,"u_time");this.gl.uniform1f(e,t)}},{key:"getUMouse",value:function(){var t=this.getUniformLocation(this.program,"u_mouse");this.gl.uniform2f(t,this.mouse.x,this.mouse.y)}},{key:"loadImage",value:function(t,e){var n=new Image;return n.src=t,n.onload=e,n}},{key:"loadImages",value:function(t,e){var n=this,r=t.length,i=function(){0==--r&&e()};t.forEach((function(t){var e=n.loadImage(t,i);n.images.push(e)}))}}])&&r(e.prototype,n),i&&r(e,i),Object.defineProperty(e,"prototype",{writable:!1}),t}()},609:(t,e,n)=>{n.d(e,{i:()=>a});var r=n(759);function i(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null==n)return;var r,i,o=[],a=!0,c=!1;try{for(n=n.call(t);!(a=(r=n.next()).done)&&(o.push(r.value),!e||o.length!==e);a=!0);}catch(t){c=!0,i=t}finally{try{a||null==n.return||n.return()}finally{if(c)throw i}}return o}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return o(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return o(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function o(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function a(){var t=i((0,r.useState)(0),2),e=t[0],n=t[1],o=i((0,r.useState)(0),2),a=o[0],c=o[1];return(0,r.useEffect)((function(){var t=function(){var t=window,e=t.innerWidth,r=t.innerHeight;n(e),c(r)};return t(),window.addEventListener("resize",t),function(){return window.removeEventListener("resize",t)}}),[]),{width:e,height:a}}}}]);